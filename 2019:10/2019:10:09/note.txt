（1）arr.forEach()和arr.map()的区别 
1. arr.forEach()和for循环一样，是代替for。arr.map()是修改数组其中的数据，并通过return可以返回新的数据。
2. arr.forEach()没有return，arr.map()有return
但是两者对value做的操作并不会改变arr本身

（2）arr.copyWithin()
第一个参数：必选，索引从哪个位置开始替换位置
第二个参数：可选，索引从哪个位置开始读取数组项
第三个参数：可选，索引从哪个位置停止读取数组项（左闭右开）
这个方法会改变会覆盖元素组项arr，也会返回当前数组

（3）Array.from()将伪数组变成数组，就是只要有length的就可以转成数组
（4）Array.of()将一组值转换成数组
Array.of()等价于new Array()
但是new Array()有缺点，就是参数问题引起的重载
console.log(new Array(2))   //[empty × 2]  是个空数组
console.log(Array.of(2))    // [2]

(4)arr.find()和arr.filter()的区别
1.find返回符合条件的所有元素组成的数组，filter返回符合条件的第一个元素

(5)arr.fill(target, start, end) 使用给定的值，填充一个数组
第一个参数：待填充的元素
第二个参数：开始填充的位置-索引
第三个参数：终止填充的位置-索引（不包括该位置)
填充完后会改变原数组，也会返回当前数组

（6）arr.includes()与arr.indexOf()的区别：
1 indexOf()返回的是数值，而includes()返回的是布尔值
2 indexOf()不能判断NaN，返回为-1 ，includes()则可以判断

(7)数组的方法
push()
pop()
unshift()
shift()
splice() 改变原数组，返回截取的值
concat()
split()
sort()
reverse() 改变原数组
slice()  不改变原数组，返回截取的值
forEach() 遍历数组，无return
map() 映射数组（遍历数组）有return返回一个新数组
filter() 返回满足条件的数组
every() 是否全部元素都满足条件
some() 是否有一个元素满足条件
reduce(callback, initialValue) 迭代数组所有项，进行叠加
reduceRight() 从数组的末尾开始叠加
indexOf() 查找某一项的下标
lastIndexOf()
Array.from()
Array.of()
copyWithin()
find() 查找到第一个符合条件的数组成员
findIndex() 查找第一个符合条件的数组成员索引
fill() 用一个元素填充数组
includes() 判断数组中是否包含给定的值
keys()  遍历键值
values()  遍历数组键值
entries()  遍历数组的键名和键值










